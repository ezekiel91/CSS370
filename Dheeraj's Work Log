Dheeraj Singavarapu:

October 16(1 hour) - 

Created google document with links to youtube shorts and videos that we can download and use in our project. 
Also did reserach on how to use Ai captioning apps to caption videos in order to retain attention from users
At first only decided to find videos pertaining to highschoool math, however realized this would be much more difficult to find short formv videos for that age group.
Decided to scrap that idea and target kids age range from 5-10 ish instead as teaching math is much easier and thus shorter in videos for that age group

October 18(1 hour)- 
Downloaded Android Studios(Screenshot uploaded with time stamp to jira) and began setting up the application and attempting to follow the SDK instructions from brainbit

October 25(3 hours 1 hour before class and 2 hours after class at home)- 
Long break due to midterms but re opened the SDK and got to work. Started off smoothly then slowly started running into problems.
At first it was very difficult to even navigate android studio or understand what was what and where to implement the SDK.
I used this video to get a introductory understanding of the app. (https://www.youtube.com/watch?v=BBWyXo-3JGQ)
After watching this I again began to work on the SDK but I kept getting bugs. I attempted to solve the bugs in class when I showed the professor we had many errors that were red
but after I got home I was able to figure out why we were getting the red errors and eventually got it down to one error. Emailed teacher on how to fix it and followed the instructions given
by professor. 

October 27th(2 hours)- 
Had a group discord call(Screenshot uploaded to jira) with teammates attempting to solve the problems we were getting with the SDK. We tried many different ways of going about pulling the SDK but didn't seem to work.
We finally were able to figure out a way to use a github repository the brainbit site had opened to the public. We had a working SDK however it was the old SDK so there wasn't much we could do but donwload it and see if it works 
with the headband on monday.

October 29th(1 hour)-
Used the professors instructions he sent on how to create an app through android studios. Was able to follow the instructions provided by the professor to create
an emulator. After following the instructions I troubleshooted again to see if I could pull the new SDK now. After trying for awhile after creating the emulator I stopped and decided to ask in class next day.


October 30th(1-2 hour after class)-
We came to the realization that we can't work through android studio without an android phone. Decided to abandon the app idea and move to HTML.
Went home and downloaded VS code and watched an introductory course on python(https://www.youtube.com/watch?v=kqtD5dpn9C8) as I was already actively learning Java and python was needed in this code in some sections. 
After having VS code downloaded I forked the repository given to us by the professor and went over it vaguely to get ready for class on Wedneday to get data.

November 1st(1 hour after class)-
In class we were attempting to get Data flowing on one of our devices. Professor suggested Anaconda for the Mac. I came home to it being downloaded and attempted to get to where 
the professor said I needed to be but kept getting hit with similar errors that were happening while the professor was showing me. After some time of not being able to get to where I needed
I decided to move on to the other backend of the project for example video stop. I tried some things after looking things up online for video stop but didn't seem to be on the write track.
Called it a day and came back to it a few days later. 

November 3d(1-2 hours)-
Began gathering all the links to content i've accumalted and downloading them and attempting to use a auto caption ai in an editing app im 
familiar with. Also began updating the Jira to fit the requirements of our new approach which is a HTML website. As well as updating a timeline for 
the repository as I was only grabbing screenshots of my work. 

November 4th(2-3 hours)-
Spent this time attempting figure out the code for stop video. I overcomplicated it and eventually realized that it was literally the play video but
for stop video. I decided to add more to the Jira as well. Also I realized that maybe people would like the option to replay videos and I spent some time
researching ways to implement a replay button on the videos. I struggled for a while and came up with some things from stack but wasn't sure if it was being 
implemented correctly so left it alone. I went from that to a dislike and like button idea so that if someone dislikes the video the program does not show that person
the video anymore. If liked the video will show up in liked videos and can be viewed when needed. I was just trying to come up with new ideas although it is somewhat frontend.
I was only able to figure out how to create the buttons but not actually connect them to anything yet.

November 5th(Currently trying to work all day 2 p.m. till 9 p.m. on and off worked attempting to make progress in whatever way I could.)- 
Started working around 2 p.m. today and am currently still working(6:56 p.m) obviously took small breaks here and there but have been consitenly either 
trying to update the html page with new features. A skip video feature, like/dislike, feature to see what video you liked or disliked. Making updates to the page 
such as centering the videos and buttons surrounding it. Also working on captioning and clipping up the many videos I have as far as content. Along with 
updating the Jira when I am waiting for content to download or screenrecords to finish. Some of the contnent I've been downloading as they are short form but others I 
screenrecord as they're very long videos and I only need clips to caption. Also majority of my time is being consumed just doing research on how to do certain things in 
HTML and java. From watching various tutorial videos on youtube and picking apart what is useful from each one to scowering stack to find help with code. Have also came to 
realize a lot of the frontend requires CSS which I am not familiar with so have been finding tutorials online for that as well. Currently working on small tweaks such as 
once a video stops playing to trigger the skipvideo() function I implemented. This is so that I know my videoended() function is actually accounting for when the video ends and
so it can be used later when needed. I also made some tweaks to the like and dislike as when I first implemented it it was allowing me to do both so I changed it so only one
option is available to click. I am going to try to implement an option to change your mind after you like or dislike and chose the other. Am also contiuing to downlaod and edit 
clips as I go. Just finished a group call just touching base with one another to make sure everyone is on track to finishing what they can.


INDEX.HTML(LATEST)Updated with comments(So vscode doesn't like when use // sometimes and thinks its text apart of code learned you need to use <!--  --> instead - 
<!DOCTYPE html>
<html>
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.js"
            integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk" crossorigin="anonymous"></script>
    <style>
        /* Styling for the video container */
        .video-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 80vh;
        }

        /* Styling for the button container */
        .button-container {
            display: flex;
            justify-content: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>MATHHEAD</h1>
    </div>

    <script>
        // this is an array of video objects with attributes for src, liked, and disliked
        var videos = [
            { src: "movie.mp4", liked: false, disliked: false },
            { src: "movie2.mp4", liked: false, disliked: false }
        ];

        // Initialize the index of the currently playing video
        var currentVideoIndex = 0;

        // Function for video playback
        function play_start() {
            $.post("/open_api/play_movie", { "data": "somedata", "any": "data" },
                function(data, textStatus) {
                    // This gets called when the browser receives a response from the server
                    console.log(data);
                }, "json").fail(function(response) {
                    // This gets called if the server throws an error
                    console.log("error");
                    console.log(response);
                });
        }

        // Function for the video ending
        function VideoEnded() {
            $.post("/open_api/video_ended", { "data": "somedata", "any": "data" },
                function(data, textStatus) {
                    console.log(data);
                    skipVideo(); // Skip to the next video when the current video ends
                }, "json").fail(function(response) {
                    console.log("error");
                    console.log(response);
                });
        }

        // Function to update the like and dislike buttons
        function updateButtons() {
            var currentVideo = videos[currentVideoIndex];
            var likeButton = document.getElementById("likeButton");
            var dislikeButton = document.getElementById("dislikeButton");

            likeButton.disabled = currentVideo.liked || currentVideo.disliked;
            dislikeButton.disabled = currentVideo.liked || currentVideo.disliked;
        }

        // Function for liking a video
        function likeVideo() {
            videos[currentVideoIndex].liked = true;
            updateButtons();
            console.log("Liked the video");
        }

        // Function for disliking a video
        function dislikeVideo() {
            videos[currentVideoIndex].disliked = true;
            updateButtons();
            console.log("Disliked the video");
        }

        // Function to skip to the next video
        function skipVideo() {
            currentVideoIndex++;
            if (currentVideoIndex < videos.length) {
                video.src = videos[currentVideoIndex].src;
                video.play();
                updateButtons();
            } else {
                console.log("All videos have been played.");
            }
        }

        // Function to display liked and disliked videos in a modal
        function seeLikedAndDislikedVideos() {
            var likedVideos = videos.filter(video => video.liked);
            var dislikedVideos = videos.filter(video => video.disliked);

            var modalContent = "Liked Videos: " + likedVideos.map(video => video.src).join(", ") + "<br>";
            modalContent += "Disliked Videos: " + dislikedVideos.map(video => video.src).join(", ");

            // Show the modal with the content
            document.getElementById("modal").innerHTML = modalContent;
            document.getElementById("myModal").style.display = "block";
        }

        // Function to close the modal(modal is like a pop up screen its being used to display the liked and disliked videos)
        function closeModal() {
            document.getElementById("myModal").style.display = "none";
        }
    </script>

    <div class="video-container">
        <video id="video" width="400" height="300" controls onended="skipVideo()">
            <source src="movie.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>

        <div class="button-container">
            <!-- Like button -->
            <button id="likeButton" onclick="likeVideo()">Like</button>
            <!-- Dislike button -->
            <button id="dislikeButton" onclick="dislikeVideo()">Dislike</button>
            <!-- Skip video button -->
            <button id="skipButton" onclick="skipVideo()">Skip Video</button>
            <!-- Button to see liked and disliked videos -->
            <button id="seeLikedAndDislikedButton" onclick="seeLikedAndDislikedVideos()">See Liked and Disliked Videos</button>
        </div>
    </div>

    <!-- Modal for displaying liked and disliked videos -->
    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <div id="modal"></div>
        </div>
    </div>

    <script>
        // Get the video element
        var video = document.getElementById("video");

        // Event listener for video play
        video.addEventListener("play", (event) => {
            play_start();
        });

        // Event listener for video ending
        video.addEventListener("ended", (event) => {
            VideoEnded();
        });
    </script>
</body>
</html>
